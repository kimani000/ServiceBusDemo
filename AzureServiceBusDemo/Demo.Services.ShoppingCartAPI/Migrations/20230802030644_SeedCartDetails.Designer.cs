// <auto-generated />
using System;
using Demo.Services.ShoppingCartAPI.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Demo.Services.ShoppingCartAPI.Migrations
{
    [DbContext(typeof(ShoppingCartDbContext))]
    [Migration("20230802030644_SeedCartDetails")]
    partial class SeedCartDetails
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Demo.Services.ShoppingCartAPI.Models.ShoppingCart", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("ShoppingCart");
                });

            modelBuilder.Entity("Demo.Services.ShoppingCartAPI.Models.ShoppingCartDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ShoppingCartId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ShoppingCartId");

                    b.ToTable("ShoppingCartDetail");

                    b.HasData(
                        new
                        {
                            Id = new Guid("750a9e5e-693a-48df-aa65-c3fbac57d5a3"),
                            Count = 3,
                            ProductId = new Guid("63846c08-4514-4a7b-1213-08db8e4f008f"),
                            ShoppingCartId = new Guid("55bd8681-b566-4286-80a5-7763fa964c88")
                        },
                        new
                        {
                            Id = new Guid("4075409f-2fde-428f-aa8f-2c672697692c"),
                            Count = 4,
                            ProductId = new Guid("9a637913-87c9-4741-b5f3-1b4ff7a98ad9"),
                            ShoppingCartId = new Guid("55bd8681-b566-4286-80a5-7763fa964c88")
                        },
                        new
                        {
                            Id = new Guid("70e98204-c28d-4eb3-aad5-d984202299a7"),
                            Count = 2,
                            ProductId = new Guid("9135cb05-9652-4717-a4a6-81bf042fb86c"),
                            ShoppingCartId = new Guid("890a05e1-e229-4126-989d-b76bd9287dbe")
                        },
                        new
                        {
                            Id = new Guid("00a9eba0-509c-48c6-b9c9-a788eef4008f"),
                            Count = 1,
                            ProductId = new Guid("61777b2c-964d-4ad7-974c-dc75037e4b89"),
                            ShoppingCartId = new Guid("890a05e1-e229-4126-989d-b76bd9287dbe")
                        });
                });

            modelBuilder.Entity("Demo.Services.ShoppingCartAPI.Models.ShoppingCartDetail", b =>
                {
                    b.HasOne("Demo.Services.ShoppingCartAPI.Models.ShoppingCart", "ShoppingCart")
                        .WithMany("ShoppingCartDetail")
                        .HasForeignKey("ShoppingCartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ShoppingCart");
                });

            modelBuilder.Entity("Demo.Services.ShoppingCartAPI.Models.ShoppingCart", b =>
                {
                    b.Navigation("ShoppingCartDetail");
                });
#pragma warning restore 612, 618
        }
    }
}
